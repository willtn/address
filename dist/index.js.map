{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,2CAAqC;IAOrC;QAoBE,iBACS,EAAU,EACV,KAAqC,EACrC,KAAqC,EACrC,GAAmC,EACnC,IAAoC,EACpC,KAAqC,EACrC,WAA2C,EAC3C,OAAuC,EACvC,WAA2C,EAC3C,QAAwC;YARxC,sBAAA,EAAA,QAAwB,oBAAM,CAAC,IAAI,EAAE;YACrC,sBAAA,EAAA,QAAwB,oBAAM,CAAC,IAAI,EAAE;YACrC,oBAAA,EAAA,MAAsB,oBAAM,CAAC,IAAI,EAAE;YACnC,qBAAA,EAAA,OAAuB,oBAAM,CAAC,IAAI,EAAE;YACpC,sBAAA,EAAA,QAAwB,oBAAM,CAAC,IAAI,EAAE;YACrC,4BAAA,EAAA,cAA8B,oBAAM,CAAC,IAAI,EAAE;YAC3C,wBAAA,EAAA,UAA0B,oBAAM,CAAC,IAAI,EAAE;YACvC,4BAAA,EAAA,cAA8B,oBAAM,CAAC,IAAI,EAAE;YAC3C,yBAAA,EAAA,WAA2B,oBAAM,CAAC,IAAI,EAAE;YATxC,OAAE,GAAF,EAAE,CAAQ;YACV,UAAK,GAAL,KAAK,CAAgC;YACrC,UAAK,GAAL,KAAK,CAAgC;YACrC,QAAG,GAAH,GAAG,CAAgC;YACnC,SAAI,GAAJ,IAAI,CAAgC;YACpC,UAAK,GAAL,KAAK,CAAgC;YACrC,gBAAW,GAAX,WAAW,CAAgC;YAC3C,YAAO,GAAP,OAAO,CAAgC;YACvC,gBAAW,GAAX,WAAW,CAAgC;YAC3C,aAAQ,GAAR,QAAQ,CAAgC;QAC7C,CAAC;QA9BS,eAAO,GAArB,UAAsB,GAAe;YACnC,MAAM,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,oBAAM,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjP,CAAC;QAEa,aAAK,GAAnB,UAAoB,OAAgB;YAClC,MAAM,CAAC;gBACL,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE;gBAChC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;gBACtC,WAAW,EAAE,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;gBAC9C,WAAW,EAAE,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;gBAC9C,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE;gBAC3C,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;gBAClC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;gBAClC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE;gBAClC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;aAC/B,CAAC;QACJ,CAAC;QAcH,cAAC;IAAD,CAAC,AAhCD,IAgCC;IAhCY,0BAAO","sourcesContent":["import { Option } from 'funfix-core';\n\nexport interface Coords {\n  lat: number;\n  lon: number;\n}\n\nexport class Address {\n  public static fromRaw(raw: RawAddress): Address {\n    return new Address(raw.id, Option.of(raw.line1), Option.of(raw.line2), Option.of(raw.zip), Option.of(raw.city), Option.of(raw.state), Option.of(raw.countryCode), Option.of(raw.comment), Option.of(raw.coordinates), Option.of(raw.geocoder));\n  }\n\n  public static toRaw(address: Address): RawAddress {\n    return {\n      city: address.city.orUndefined(),\n      comment: address.comment.orUndefined(),\n      coordinates: address.coordinates.orUndefined(),\n      countryCode: address.countryCode.orUndefined(),\n      geocoder: address.countryCode.orUndefined(),\n      id: address.id,\n      line1: address.line1.orUndefined(),\n      line2: address.line2.orUndefined(),\n      state: address.state.orUndefined(),\n      zip: address.zip.orUndefined()\n    };\n  }\n\n  constructor(\n    public id: string,\n    public line1: Option<string> = Option.none(),\n    public line2: Option<string> = Option.none(),\n    public zip: Option<string> = Option.none(),\n    public city: Option<string> = Option.none(),\n    public state: Option<string> = Option.none(),\n    public countryCode: Option<string> = Option.none(),\n    public comment: Option<string> = Option.none(),\n    public coordinates: Option<Coords> = Option.none(),\n    public geocoder: Option<string> = Option.none()\n  ) { }\n}\n\nexport interface RawAddress {\n  city?: string;\n  comment?: string;\n  coordinates?: Coords;\n  countryCode?: string;\n  geocoder?: string;\n  id: string;\n  line1?: string;\n  line2?: string;\n  state?: string;\n  zip?: string;\n}\n"]}